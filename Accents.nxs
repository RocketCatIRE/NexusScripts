{"name":"accents","enabled":true,"description":"Speak with style","type":"group","id":1,"items":[{"type":"function","name":"onLoad","enabled":true,"id":6,"code":"ow_Write('#output_main', '[ACCENTS]: Use \\'acc\\' to initiate Accents.')"},{"type":"function","name":"onGMCP","enabled":true,"id":4,"code":"if (typeof acc !== 'undefined') {\n var data = args.gmcp_args\n switch (args.gmcp_method) {\n   case 'Char.Status':\n    acc.update('class', data.class)\n    if (data.city) {\n      var city = data.city\n      city = city.replace(/ \\(\\d+\\)/g,'')\n      acc.update('city', city)\n    }\n    break;\n   case 'Char.Vitals':\n    var hp  = data.hp    || 0\n    var mp  = data.mp    || 0\n    var mhp = data.maxhp || 0\n    var mmp = data.maxmp || 0\n    acc.update('hp', hp)\n    acc.update('mp', mp)\n    acc.update('mhp', mhp)\n    acc.update('mmp', mmp)\n    break;\n   case 'Room.Info':\n    var name = data.name\n    if (name.match('Flying above ')) {\n      acc.update('fly', true)\n    } else {\n      acc.update('fly', false)\n    }\n    acc.update('num',  data.num)\n    acc.update('name', data.name)\n    acc.update('env',  data.environment)\n    break;\n   case 'Char.Afflictions.List':\n    var t = []\n    var exclude = ['deafness','blindness','insomnia','prone']\n    for (var i=0; i<data.length; i++) {\n      if (typeof data[i].name !== 'undefined' && exclude.indexOf(data[i].name) == -1) {\n       t.push(data[i].name)\n      }\n    }\n    acc.update('affs', t)\n    break;\n   case 'Char.Afflictions.Add':\n    acc.update('addAff', data.name)\n    break;\n   case 'Char.Afflictions.Remove':\n    for (var i=0; i<data.length; i++) {\n      acc.update('remAff', data[i])   \n    }\n    break;\n   default:\n    break;      \n }   \n}\n"},{"type":"function","name":"initiate_acc","enabled":true,"id":2,"code":"// randomizer speech, not available to Achaean methods\n//  emote (In quiet tones, ) says, \"Testing my sultry sexiness.\"\n\nacc = (function() {\n var active = true        // '*cheekily try doing it, set voice CLEAR, set accent thing\n var prof   = ''\n var city   = ''\n var hp     = 0\n var mp     = 0\n var mhp    = 0\n var mmp    = 0\n var num    = 0\n var name   = 'Nowhere'\n var env    = 'Urban'\n var fly    = false\n var affs   = []\n var list   = [\n  { pr:   1, phrase: 'The strain evident in $me_his voice,',    conditions: ['(mp / mmp) < 0.55'] },\n  { pr:   1, phrase: 'Blood streaming down $me_his face,',      conditions: ['(hp / mhp) < 0.35'] },\n  { pr:   1, phrase: 'Visibly struggling with $me_his ailments,',           conditions: ['affs.length > 5'] },\n  { pr:   1, phrase: 'The winds whip through $me\\'s words as $me_he',       conditions: ['fly == true'] },\n  { pr:   2, phrase: 'With a quizzical look,',                  conditions: ['phrase.charAt(phrase.length - 1) == \"?\"'] },\n  { pr:   2, phrase: 'Raising $me_his voice,',                  conditions: ['phrase.charAt(phrase.length - 1) == \"!\"'] },\n  { pr:   3, phrase: 'In quiet tones,' },\n  { pr:   5, phrase: 'The air hums with electric tension as',   conditions: ['prof == \"Silver Dragon\"'] },\n  { pr:   5, phrase: 'The superheated air thrums as',           conditions: ['prof == \"Red Dragon\"'] },\n  { pr:   5, phrase: 'In raspy undertones,',                    conditions: ['prof == \"Alchemist\"'] },\n  { pr:   5, phrase: 'In a highly strung voice,',               conditions: ['prof == \"Alchemist\"'] },\n  { pr:   5, phrase: 'With a stifled smirk,',                   conditions: ['prof == \"Shaman\"'] },\n  { pr:   5, phrase: 'Echoes envelop $me as $me_he',            conditions: ['prof == \"Depthswalker\"'] },\n  { pr:   5, phrase: 'In a hushed voice,' },\n  { pr:   8, phrase: 'The crickets threaten to overpower $me\\'s voice as',  conditions: ['env == \"Road\"'] },\n  { pr:   8, phrase: 'Words reverberate within the enclosed space as',      conditions: ['env == \"Constructed underground\"'] },\n  { pr:   8, phrase: 'Words reverberate within the enclosed space as',      conditions: ['env == \"Natural underground\"'] },\n  { pr:  15, phrase: 'With grim determination,' },\n  { pr:  25, phrase: 'Narrowing $me_his eyes,' },\n  { pr:  28, phrase: 'In mellifluent timbre,',                  conditions: ['city == \"Hashan\"'] },\n  { pr: 125, phrase: 'Dropping $me_his voice to a sibilant whisper,' },\n  { pr: 125, phrase: 'With a rasping voice steeped in malevolent promises,', conditions: ['city == \"Mhaldor\"'] },\n ]\n \n var activate = function(flag) {\n  if (flag) {\n    acc.active = true\n    active = acc.active\n  } else {\n    acc.active = false\n    active = acc.active\n  }\n }\n var update = function(field, value) {\n  if (field == 'class') { acc.prof = value; prof = acc.prof }\n  if (field == 'city')  { acc.city = value; city = acc.city }\n  if (field == 'hp')    { acc.hp   = value;   hp = acc.hp   }\n  if (field == 'mhp')   { acc.mhp  = value;  mhp = acc.mhp  }\n  if (field == 'mp')    { acc.mp   = value;   mp = acc.mp   }\n  if (field == 'mmp')   { acc.mmp  = value;  mmp = acc.mmp  }\n  if (field == 'num')   { acc.num  = value;  num = acc.num  }\n  if (field == 'name')  { acc.name = value; name = acc.name }\n  if (field == 'env')   { acc.env  = value;  env = acc.env  }\n  if (field == 'fly')   { acc.fly  = value;  fly = acc.fly  }\n  if (field == 'affs')  {\n    affs = []\n    for (var k in value) {\n     affs.push(value[k])\n    }\n    acc.affs = affs\n  }\n  if (field == 'addAff') {\n    acc.affs = affs\n    if (affs.indexOf( value ) != -1) { return }\n    affs.push( value )\n    acc.affs = affs\n  }\n  if (field == 'remAff') {\n    acc.affs = affs\n    var t = affs.filter( function(m) { return m !== value } )\n    affs = t\n    acc.affs = affs\n  }\n }\n var choose = function(phrase) {\n  phrase = phrase.charAt(0).toUpperCase() + phrase.slice(1)\n  // fullstop\n  var acceptableEnd = ['.','!','?']\n  if (acceptableEnd.indexOf(phrase.slice(-1)) == -1) {\n   phrase += '.'   \n  }\n    \n  var str = ''\n  var clist = []\n  for (var i=0; i<list.length; i++) {\n    var m = list[i]\n    if (m.conditions) { // test for AT LEAST ONE true\n     var passed = false\n     for (var j=0; j<m.conditions.length; j++) {\n       try { \n        passed = eval(m.conditions[j])\n       } catch(err) { console.log('Selecting accent ERROR ' +err) }\n       if (passed) { clist.push(m); break }\n     }\n    } else {\n     clist.push(m)\n    }\n  }\n  // console.log(clist)\n  // pick one!\n  //  firstly, convert the pr()s to 1/pr()s\n  //  secondly, sort and cumulate the pr()\n  var out = []\n  var tpr = 0\n  for (var i=0; i<clist.length; i++) {\n    var m = clist[i]\n    var n = 1000 / m.pr\n        tpr += n\n    out.push({phrase: m.phrase, pr: tpr})   // at this point where we have accrued UP TO this phrase\n  }\n  out.sort(function(a, b) {\n    return a[1] - b[1]  \n  })\n  // console.log(out)\n  var pos = Math.floor((Math.random() * tpr) + 1);\n  // console.log(pos)\n  // grab the winner\n  var ous = ''\n  for (var i=0; i<out.length; i++) {\n    var m = out[i]\n    if (m.pr >= pos) {\n     ous = m.phrase\n     break\n    }\n  }\n  // posthoc mod\n  if (ous.match(/\\$me/i)) {\n   // split by the first $me\n   var t = ous.split(/\\$me\\b/)\n   var u = ''\n   var v = ''\n   if (t.length > 1) {\n     u = t[0]\n     for (var i=1; i<(t.length); i++) {\n      if (i != 1) { v += '$me' }\n      v += t[i]\n     }\n   } else {\n     u = t[0]\n   }\n   str = 'emote (' + u + ' ) ' + v + ' says, \"' + phrase + '\"'\n  } else {\n   str = 'emote (' + ous + ' ) says, \"' + phrase + '\"'   \n  }\n  return str\n }\n // console.log(choose('How are you?'))\n var inject = function(phrase, probability, conditions) {\n     \n }\n    \n return {\n   active   : active,\n   activate : activate,\n   choose   : choose,\n   update   : update,\n }\n})()\n\now_Write('#output_main', '[ACCENTS]: Generated Accents module. To use, prepend your speech with two apostrophes like so: \\'\\'I am Tysandr. Enjoy.')"},{"type":"alias","name":"Initiate Accent, acc","enabled":true,"id":5,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"function","fn":"initiate_acc"}],"text":"^acc$"},{"type":"alias","name":"Accent, ''Testing my voice","enabled":true,"id":3,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"var phrase = args[1]\nvar str = acc.choose(phrase)\nsend_command(str, true)"}],"text":"^\\'\\'(.*)$"}]}