{"name":".tls","enabled":true,"description":"Talismans","type":"group","id":1,"items":[{"type":"function","name":"onLoad","enabled":true,"id":2,"code":"\n// Talismans\ntls = (function() {\n var dt       = '#output_main'\n var send     = send_command\n var wr       = ow_Write\n var pt       = 8\n var inv      = {}\n var sp       = '|'\n var dragons  = ['Black','Blue','Gold','Green','Red','Silver']\n var pieces   = ['claw','heart','tooth','scale','leather','bone','eye','special']\n var specials = {\n   Black : 'acid sac',\n   Blue  : 'lung',\n   Gold  : 'brain stem',\n   Green : 'poison sac',\n   Red   : 'belly',\n   Silver: 'larynx', }\n \n var rpad = function(str, len, char) {\n  if (typeof str == \"number\") { str = tostring(str) }\n  if (char == null) { char = ' ' }\n  return str + char.repeat(len - str.length)\n }\n var lpad = function(str, len, char) {\n  if (typeof str == \"number\") { str = tostring(str) }\n  if (char == null) { char = ' ' }\n  return char.repeat(len - str.length) + str\n }\n var inject = function(rule) {\n  /*\n  var div = $(\"<div class='tls-rules'></div>\", {\n    html: '&shy;<style>' + rule + '</style>'\n  }).appendTo(\"body\"); */\n  $('body').append('<div class=\"tls-rules\">&shy;<style>' + rule + '</style></div>')\n }\n if ( $('.tls-rules').length ) { $('.tls-rules').remove() }\n inject('.BlackDragon  { color: rgba(165,175,185,1); }')\n inject('.BlueDragon   { color: rgba(135,165,210,1); }')\n inject('.GoldDragon   { color: rgba(180,165, 85,1); }')\n inject('.GreenDragon  { color: rgba(155,185, 85,1); }')\n inject('.RedDragon    { color: rgba(200, 25, 25,1); }')\n inject('.SilverDragon { color: rgba(140,140,140,1); }')\n\n var reset = function() {\n  for (var k in dragons) {\n    var type = dragons[k]\n    inv[type] = {}\n    for (var n in pieces) {\n     var piece = pieces[n]\n     var special = false\n     if (piece == 'special') { piece = specials[type]; special = true }\n     inv[type][piece] = {}\n     if (special) {\n       for (var i=1; i<4; i++) { inv[type][piece]['L'+i] = 0 }\n     } else {\n       for (var i=1; i<8; i++) { inv[type][piece]['L'+i] = 0 } }\n    }\n  }\n }\n var check = function() {\n  reset()\n  var str = ''\n  str = 'more' + sp\n  str += 'talisman pieces' + sp + str + str + str + str + str + str + str\n  send(str)\n }\n var parse = function(t) {\n  var type = t.type\n  inv[type] = inv[type] || {}\n  inv[type][t.piece] = inv[type][t.piece] || {}\n  var level = t.level\n  var count = t.count\n  inv[type][t.piece]['L'+level] = count\n }\n var trigger = function(v) {\n  var t = {}\n  t.count   = v[1]\n  t.type    = v[2]\n  t.piece   = v[3]\n  t.level   = v[4]\n  parse(t)\n }\n var display = function() {\n  var str = ''\n  str += '<p class=\"mono\" style=\"white-space: prewrap;\">'\n  str += rpad('', 26)\n  str += ' L1    '\n  str += 'L2    '\n  str += 'L3    '\n  str += 'L4    '\n  str += 'L5    '\n  str += 'L6    '\n  str += 'L7    '\n  str += '</p><br >'\n  for (var k in inv) {\n    for (var n in inv[k]) {\n     str += '<p>'\n     str += '<span class=\"' + k + 'Dragon mono\" style=\"white-space: prewrap;\">'\n     var gvc = k\n         gvc = lpad(gvc, 7)\n     str += rpad(gvc + ' Dragon ' + n, 26)\n     str += '</span>'\n     str += '<span class=\"mute mono\">'\n     var sum = 0\n     var special = false\n     for (var v in specials) {\n       var e = specials[v]\n       if (e == n) { special = true } }\n     for (var o in inv[k][n]) {\n       var count = parseInt( inv[k][n][o] )\n       var rank  = o\n           rank  = rank.replace('L','')\n           rank  = parseInt(rank)\n       sum += count * Math.pow(2, rank - 1)\n       if (count != 0) { str += '<span class=\"' + k + 'Dragon mono\">' }\n       str += rpad('  ' + count, 6)\n       if (count != 0) { str += '</span>' }\n     }\n     if (special) {\n       str += rpad('', 24) + '  <span class=\"' + k + 'Dragon mono\" style=\"white-space: prewrap;\">' + sum + '</span> / 4'\n     } else {\n       str += '  <span class=\"' + k + 'Dragon mono\" style=\"white-space: prewrap;\">' + sum + '</span> / 64' }\n     str += '</span>'\n     str += '</p>'\n    }\n  }\n  str = '<p><div style=\"font-size:'+pt+'pt;\">' + str + '</div></p>'\n  // console.log(str)\n  wr( dt, str )\n  // console.log('Written out.')\n }\n \n return {\n   check   : check,\n   display : display,\n   inv     : inv,\n   parse   : parse,\n   trigger : trigger,\n }\n})()"},{"type":"trigger","name":"Talisman Pieces","enabled":true,"id":3,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^(?:B|P)[ ]+?(\\d+)[ ]+a (\\w+) Dragon's (\\w+)[ ]+?(\\d+)[ ]+?Dragon[ ]+?(\\w+)$","actions":[{"action":"script","script":"tls.trigger(args)"}]},{"type":"trigger","name":"Talisman Pieces","enabled":true,"id":4,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^(?:B|P)[ ]+?(\\d+)[ ]+a (\\w+) Dragon (\\w+)[ ]+?(\\d+)[ ]+?Dragon[ ]+?(\\w+)$","actions":[{"action":"script","script":"tls.trigger(args)"}]},{"type":"trigger","name":"Talisman Pieces","enabled":true,"id":5,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^(?:B|P)[ ]+?(\\d+)[ ]+(\\w+) Dragon (leather)[ ]+?(\\d+)[ ]+?Dragon[ ]+?(\\w+)$","actions":[{"action":"script","script":"tls.trigger(args)"}]},{"type":"trigger","name":"Talisman Pieces","enabled":true,"id":6,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^(?:B|P)[ ]+?(\\d+)[ ]+a (Black|Gold|Green) Dragon's (acid sac|brain stem|poison sac)[ ]+?(\\d+)[ ]+?Dragon[ ]+?(\\w+)$","actions":[{"action":"script","script":"tls.trigger(args)"}]},{"type":"alias","name":"tlc, Talisman Check","enabled":true,"id":8,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"tls.check()"}],"text":"^tlc$"},{"type":"alias","name":"tls, Talisman Display","enabled":true,"id":7,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"tls.display()"}],"text":"^tls$"}]}