{"name":"liferods","enabled":true,"description":"Beautiful healthbars","type":"group","id":1,"items":[{"type":"function","name":"README","enabled":true,"id":2,"code":"/*\n  use 'try lifebar' to sample\n  \n */"},{"type":"function","name":"onLoad","enabled":true,"id":3,"code":"liferod = typeof liferod != 'undefined' ? liferod : {}\n\nliferod.height = 88\nliferod.width  = 23\nliferod.starts = 0.15\nliferod.offset = liferod.starts * liferod.height / 11\n\nliferod.class  = 'liferod'\nliferod.inject = function(rule) { $('body').append('<div class=\"' + liferod.class + '\">&shy;<style>' + rule + '</style></div>') }\n\nliferod.init = function() {\n  var width    = liferod.width\n  var height   = liferod.height\n  var starts   = liferod.starts\n  var offset   = liferod.offset\n  var progress = liferod.starts * liferod.height\n  \n  var rule  = ''\n      rule += '.gauge-holder { width: ' + width + 'px; height: ' + height + 'px; perspective: 300px; transform-style: preserve-3d; }'\n      rule += '.gauge-holder { display: flex; justify-content: center; flex-direction: column; }'\n      rule += '.gauge-face   { position: absolute; opacity: 0.5; transition: all 70ms ease-in-out; }'\n      rule += '.gauge-face-A, .gauge-face-B, .gauge-face-1, .gauge-face-2 { height: ' + height + 'px; width: ' + width + 'px; }'\n      rule += '.gauge-face-Y, .gauge-face-Z { height: ' + width + 'px; width: ' + width + 'px; }'\n      rule += '.gauge-face-A { transform: rotateY(  0deg) translate3d(0, ' + (-(height - width) / 2 + offset) + 'px, ' + (width / 2) + 'px); }'\n      rule += '.gauge-face-B { transform: rotateY(180deg) translate3d(0, ' + (-(height - width) / 2 + offset) + 'px, ' + (width / 2) + 'px); }'\n      rule += '.gauge-face-1 { transform: rotateY(-90deg) translate3d(0, ' + (-(height - width) / 2 + offset) + 'px, ' + (width / 2) + 'px); }'\n      rule += '.gauge-face-2 { transform: rotateY( 90deg) translate3d(0, ' + (-(height - width) / 2 + offset) + 'px, ' + (width / 2) + 'px); }'\n      rule += '.gauge-face-Y { transform: rotateX( 90deg) translate3d(0, 0, ' + (height / 2 - offset) + 'px); }'\n      rule += '.gauge-face-Z { transform: rotateX(-90deg) translate3d(0, 0, ' + (height / 2 + offset) + 'px); }'\n    \n      rule += '.gauge-face-C, .gauge-face-3, .gauge-face-X, .gauge-face-4 { opacity: 0.88 }'\n      rule += '.gauge-face-C, .gauge-face-3, .gauge-face-4 { height: ' + progress + 'px; width: ' + width + 'px; }'\n      rule += '.gauge-face-X { height: ' + width + 'px; width: ' + width + 'px; }'\n      rule += '.gauge-face-C { transform: rotateY(  0deg) rotateZ(  0deg) translate3d(0, ' + (width/2 + height/2 - progress + offset) + 'px, ' + (width / 2) + 'px); }'\n      rule += '.gauge-face-3 { transform: rotateY(270deg) rotateZ(  0deg) translate3d(0, ' + (width/2 + height/2 - progress + offset) + 'px, ' + (width / 2) + 'px); }'\n      rule += '.gauge-face-4 { transform: rotateY( 90deg) rotateZ(  0deg) translate3d(0, ' + (width/2 + height/2 - progress + offset) + 'px, ' + (width / 2) + 'px); }'\n      rule += '.gauge-face-X { transform: rotateX( 90deg) translate3d(0, 0, ' + (-(height/2) + progress - offset) + 'px); }'\n    \n      rule += '.gauge-face   { background: rgba( 254, 254, 254, 0.30 ); }'\n      rule += '.gauge-face-B { background: rgba( 254, 254, 254, 0.95 ); }'\n      rule += '.gauge-face-Z { background: rgba( 254, 254, 254, 0.95 ); }'\n      rule += '.gauge-face-C { background: rgba( 40, 210,  65, 0.95 ); }'\n      rule += '.gauge-face-3 { background: rgba( 40, 210,  65, 0.95 ); }'\n      rule += '.gauge-face-4 { background: rgba( 40, 210,  65, 0.95 ); }'\n      rule += '.gauge-face-X { background: rgba( 40, 210,  65, 0.95 ); }'\n      rule += '.gauge-face-B { box-shadow: 0 0 6px rgba( 0, 0, 0, 0.3), 0 0 6px rgba( 0, 0, 0, 0.3), 0 0 6px #fefefe; }'\n      rule += '.gauge-face-Z { box-shadow: -0.1em -0.1em 1em rgba( 35, 185, 135, 1 ), -0.1em 0.1em 1em rgba( 35, 185, 135, 1 ), 0.1em -0.1em 1em rgba( 35, 185, 135, 1 ), 0.1em 0.1em 1em rgba( 35, 185, 135, 1 ); }'\n      rule += '.gauge-face          { border: 1px solid rgba(   1,   1,   1, 0.05); }'\n      rule += '.gauge-face .growing { border: 1px solid rgba(  15, 255, 255, 0.35); }'\n  liferod.inject(rule)\n}\n\nliferod.create = function(id) {\n  /*\n   var height = height || liferod.height\n   var width  = width  || liferod.width\n   var starts = starts || liferod.starts\n  */\n  \n  if ($('#' + id).length) { $('#' + id).remove() }\n  var d  = ''\n      d += '<div id=\"' + id + '\" class=\"gauge-holder liferod\">'\n      d += '<div class=\"3d-gauge\">'\n      d +=   '<div class=\"gauge-face gauge-face-A\"></div>'\n      d +=   '<div class=\"gauge-face gauge-face-B\"></div>'\n      d +=   '<div class=\"gauge-face gauge-face-1\"></div>'\n      d +=   '<div class=\"gauge-face gauge-face-2\"></div>'\n      d +=   '<div class=\"gauge-face gauge-face-Y\"></div>'\n      d +=   '<div class=\"gauge-face gauge-face-Z\"></div>'\n      d +=   '<div class=\"gauge-face gauge-face-C growing\"></div>'\n      d +=   '<div class=\"gauge-face gauge-face-3 growing\"></div>'\n      d +=   '<div class=\"gauge-face gauge-face-4 growing\"></div>'\n      d +=   '<div class=\"gauge-face gauge-face-X edge\"></div>'\n      d += '</div>'\n      d += '</div>'\n  $('#bottom').append(d)\n  $('#' + id).draggable()\n  $('#' + id).css('transform', 'rotateY( -13deg) rotateX( 0deg) rotateZ( 0deg)')\n}\n\n// Initialisation\nliferod.init()"},{"type":"trigger","name":"Ship Hull & Shield","enabled":true,"id":4,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^\\[ Speed\\: .* \\| Hull\\: (\\d+\\.?\\d*|\\.\\d+)\\% \\| Shield\\: (\\d+\\.?\\d*|\\.\\d+)\\%","actions":[{"action":"script","script":"var hull   = parseInt(args[1])\nvar shield = parseInt(args[2])\n\nif (typeof liferod.hull == 'undefined') { liferod.hull = 0 }\nif (typeof liferod.shield == 'undefined') { liferod.shield = 0 }\n\nif (hull != liferod.hull)     { liferod.hull = hull;     $(document).trigger('shipHealth') }\nif (shield != liferod.shield) { liferod.shield = shield; $(document).trigger('shipShield') }"}]},{"type":"alias","name":"","enabled":true,"id":5,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"// Drawing\nliferod.hull   = 0\nliferod.shield = 0\n\nliferod.create('liferod-shipHealth')\nliferod.create('liferod-shipShield')\n\n$('#liferod-shipHealth').css({\n  position: 'absolute',\n  left    : '-' + ((liferod.width + 9) * 1) + 'px',\n  top     : '-23px'\n})\n$('#liferod-shipShield').css({\n  position: 'absolute',\n  left    : '-' + ((liferod.width + 9) * 2) + 'px',\n  top     : '-23px'\n})\n\nvar rule  = ''\n    rule += '#liferod-shipShield .gauge-face-C { background: rgba(  45, 120, 210, 0.95 ); }'\n    rule += '#liferod-shipShield .gauge-face-3 { background: rgba(  45, 120, 210, 0.95 ); }'\n    rule += '#liferod-shipShield .gauge-face-4 { background: rgba(  45, 120, 210, 0.95 ); }'\n    rule += '#liferod-shipShield .gauge-face-X { background: rgba(  45, 120, 210, 0.95 ); }'\n    rule += '#liferod-shipShield .gauge-face-Z { box-shadow: -0.1em -0.1em 1em rgba( 45, 120, 210, 1 ), -0.1em 0.1em 1em rgba( 45, 120, 210, 1 ), 0.1em -0.1em 1em rgba( 45, 120, 210, 1 ), 0.1em 0.1em 1em rgba( 45, 120, 210, 1 ); }'\nliferod.inject(rule)\n\n$(document).off('shipHealth')\n$(document).off('shipShield')\n\n$(document).on('shipHealth', function(e) {\n  var height   = liferod.height\n  var width    = liferod.width\n  var offset   = liferod.offset\n  \n  var progress = liferod.hull / 100 * height\n  \n  $('#liferod-shipHealth .gauge-face-C')\n     .css({ height: progress + 'px' })\n     .css('transform', 'rotateY(  0deg) rotateZ( 0deg) translate3d(0, ' + (width/2 + height/2 - progress + offset) + 'px, ' + (width / 2) + 'px)')\n  $('#liferod-shipHealth .gauge-face-3')\n     .css({ height: progress + 'px' })\n     .css('transform', 'rotateY(270deg) rotateZ( 0deg) translate3d(0, ' + (width/2 + height/2 - progress + offset) + 'px, ' + (width / 2) + 'px)')\n  $('#liferod-shipHealth .gauge-face-4')\n     .css({ height: progress + 'px' })\n     .css('transform', 'rotateY( 90deg) rotateZ( 0deg) translate3d(0, ' + (width/2 + height/2 - progress + offset) + 'px, ' + (width / 2) + 'px)')\n  $('#liferod-shipHealth .gauge-face-X')\n     .css('transform', 'rotateX( 90deg) translate3d(0, 0, ' + (-(height/2) + progress - offset) + 'px)')\n})\n$(document).on('shipShield', function(e) {\n  var height   = liferod.height\n  var width    = liferod.width\n  var offset   = liferod.offset\n  \n  var progress = liferod.shield / 100 * height\n  \n  $('#liferod-shipShield .gauge-face-C')\n     .css({ height: progress + 'px' })\n     .css('transform', 'rotateY(  0deg) rotateZ( 0deg) translate3d(0, ' + (width/2 + height/2 - progress + offset) + 'px, ' + (width / 2) + 'px)')\n  $('#liferod-shipShield .gauge-face-3')\n     .css({ height: progress + 'px' })\n     .css('transform', 'rotateY(270deg) rotateZ( 0deg) translate3d(0, ' + (width/2 + height/2 - progress + offset) + 'px, ' + (width / 2) + 'px)')\n  $('#liferod-shipShield .gauge-face-4')\n     .css({ height: progress + 'px' })\n     .css('transform', 'rotateY( 90deg) rotateZ( 0deg) translate3d(0, ' + (width/2 + height/2 - progress + offset) + 'px, ' + (width / 2) + 'px)')\n  $('#liferod-shipShield .gauge-face-X')\n     .css('transform', 'rotateX( 90deg) translate3d(0, 0, ' + (-(height/2) + progress - offset) + 'px)')\n})\n\n// Test\nliferod.hull = 45\nliferod.shield = 75\n\n$(document).trigger('shipHealth')\n$(document).trigger('shipShield')\n"}],"text":"^try lifebar$"}]}