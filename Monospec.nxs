{"name":"monospec","enabled":true,"description":"Beautiful monospacing","type":"group","id":1,"items":[{"type":"function","name":"README","enabled":true,"id":4,"code":"/*\n  As of December 2018, this is the format for expression Monospaced fonts with Nexus\n  This may need to be updated if Nexus changes\n  \n    .mono {\n      font-family: 'LiberationMono';\n    }\n\n  As of December 2018, Nexus uses ow_Write & #output_main for printing messages\n  This may need to be updated if Nexus changes\n  \n    monospec.write  = function(msg)  { ow_Write('#output_main', msg) } // Nexus write\n\n\n  The keys described in Monospec.fonts should be the expected Name for the url\n  \n    monospec.fonts = [\n      {key: 'Overpass Mono', url: 'https://fonts.googleapis.com/css?family=Overpass+Mono' },  // Don't forget the commas at the ends\n      \n */"},{"type":"function","name":"onLoad","enabled":true,"id":2,"code":"// Namespace declaration\nmonospec = typeof monospec != 'undefined' ? monospec : {}\n\n// Module Minifunctions\nmonospec.write  = function(msg)  { ow_Write('#output_main', msg) } // Nexus write\nmonospec.inject = function(rule) { $('body').append('<div class=\"' + monospec.class + '\">&shy;<style>' + rule + '</style></div>') }\nmonospec.lpad   = function(str, len, char) { if (typeof str == 'number') { str = str.toString() }; if (char == null) { char = ' ' }; var r = len - str.length; if (r < 0) { r = 0 }; return char.repeat(r) + str }\nmonospec.rpad   = function(str, len, char) { if (typeof str == 'number') { str = str.toString() }; if (char == null) { char = ' ' }; var r = len - str.length; if (r < 0) { r = 0 }; return str + char.repeat(r) }\n\n// Module Variables\nmonospec.class   = 'monospec'\nmonospec.color   = 'color: rgba( 40, 180, 190, 1 );'\nmonospec.fonts   = [\n  {key: 'Overpass Mono', url: 'https://fonts.googleapis.com/css?family=Overpass+Mono' },  // Don't forget the commas at the ends\n  {key: 'Fira Mono',     url: 'https://fonts.googleapis.com/css?family=Fira+Mono'     },\n  {key: 'Oxygen Mono',   url: 'https://fonts.googleapis.com/css?family=Oxygen+Mono'   },\n  {key: 'Ubuntu Mono',   url: 'https://fonts.googleapis.com/css?family=Ubuntu+Mono'   },\n  {key: 'Anonymous Pro', url: 'https://fonts.googleapis.com/css?family=Anonymous+Pro' },\n]\nmonospec.default = 0\nmonospec.size    = 8\n\nmonospec.init = function() {\n  if ($('.' + monospec.class).length) { $('.' + monospec.class).remove() } // Remove previous CSS declarations\n  \n  var str = '\\n'\n  var con = '@import url(\"URL-HOLDER\");'\n  var cls = '.CLASS { font-family:KEY; }'\n  for (var i = 0; i < monospec.fonts.length; i++) {\n    var str = ''\n    var fontURL = monospec.fonts[i].url\n    var fontKey = monospec.fonts[i].key\n    var fontCls = fontKey.replace(' ','-')\n    str += con.replace('URL-HOLDER', fontURL) + '\\n'\n    str += cls.replace('KEY', fontKey).replace('CLASS', fontCls) + '\\n'\n    monospec.inject(str)\n  }\n  monospec.hijack( monospec.default, monospec.size )\n}\n\nmonospec.sample = function() {\n  var m     = $.when(1)\n  var list  = monospec.fonts\n  var spec  = '<span class=\"mono\"> <span style=\"color: rgba(44,44,44,1);\">[</span>I-NDEX<span style=\"color: rgba(44,44,44,1);\">]</span> '\n      spec += '<span style=\"' + monospec.color + '\">FONT-NAME</span>: <span class=\"FONT-FAMILY\">D-ATUM</span></span>'\n  list.forEach( function(item, index) {\n    m = m.then( function() { \n      return $.ajax({ url: 'https://geek-jokes.sameerkumar.website/api' })\n              .fail( function() { console.log('Error retrieving API for random text.') })\n    }).then( function(datum) {\n      var str  = spec\n                  .replace('FONT-FAMILY', item.key.replace(' ','-'))\n                  .replace('FONT-NAME', monospec.lpad(item.key, 16))\n                  .replace('I-NDEX', monospec.lpad(index, 3))\n                  .replace('D-ATUM', datum)\n      monospec.write(str)\n    })\n  })\n}\n\nmonospec.hijack = function(index, size) {\n  if (typeof index == 'undefined' || typeof index != 'number') {\n    monospec.write('<span class=\"mono\" style=\"color: red;\">No index defined for Monospec to hijack.')\n    return\n  }\n  if (typeof monospec.fonts[index] == 'undefined') {\n    monospec.write('<span class=\"mono\" style=\"color: rgba(220, 20, 125, 1);\">There is no associated font at that index: <span style=\"rgba(255,1,1,1);\">' + index + '</span>.')\n    return\n  }\n  var font = monospec.fonts[index]\n  var x    = 'auto'\n  if (typeof size != 'undefined') { x = size + 'pt' }\n  monospec.inject('.mono { font-family: \"' + font.key + '\", \"LiberationMono\"; font-size: ' + x + '; }')\n  monospec.write('<span class=\"mono\">(Monospec): Replaced <span style=\"color: rgba( 210, 95, 155, 1);\">.mono</span> with  <span style=\"color: rgba( 95, 210, 155, 1);\">' + font.key + '</span> at size <span style=\"color: yellow;\">' + x + '</span>.</span>')\n}\n\n// Formal initialisation\nmonospec.init()"},{"type":"alias","name":"-monospec","enabled":true,"id":3,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"monospec.sample()"}],"text":"^\\-monos(pec)*$"},{"type":"alias","name":"-monos #","enabled":true,"id":5,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"var n = args[1]\n    n = parseInt(n)\nvar s = undefined\nif (typeof args[2] != 'undefined') {\n    s = args[2].trim()\n}\nmonospec.hijack(n, s)"}],"text":"^\\-monos(?:pec)*[ ]+(\\d+)([ ]+\\d+)*$"},{"type":"alias","name":"-mono","enabled":true,"id":6,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"monospec.inject('.mono { font-family: \"LiberationMono\"; font-size: 11pt; }')"}],"text":"^\\-mono$"}]}