{"name":".ndb","enabled":true,"description":"Name Database","type":"group","id":1,"items":[{"type":"function","name":"onLoad","enabled":true,"id":2,"code":"ndb = (function() {\n  var svar        = set_variable\n  var gvar        = get_variable\n  var hardsave    = function(   ) { client.gmcp_save_system(true) }\n  var title       = function(str) { return str.replace(/\\w\\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();}) }\n  var wrt         = function(msg) { ow_Write('#output_main', '<div class=\"ndb\">' + msg + '</div>') }\n  var classr      = 'ndb-rule'\n  var modName     = 'ndb'\n  var modNameC    = 'ndb-coptions'\n  var db          = {}\n  var doSuppress  = true\n  var doHighlight = true\n  var temporaryName    = ''\n  var temporaryFaction = ''\n  var temporaryRace    = ''\n  var temporaryGender  = ''\n  var cmTarget    = ''\n  var cmLastCSS   = ''\n  var cmCoptions  = {}\n  var useCORS     = true\n  var urlCORS     = 'https://cors-anywhere.herokuapp.com/'\n  var qw          = []\n  var qwState     = 0\n  \n  var coptions    = {\n    // Races do not deserve their own colours!\n    //   CA's colours are canonically blue/gold/white\n    //   Song is purple?\n    //   Scatterhome should be rgb(1,1,1)\n    ['target'     ]  : {r: 240, g:  15, b:  15, a: 1},\n    ['Song'       ]  : {r: 169, g:  26, b: 216, a: 1},\n    ['Scatterhome']  : {r: 145, g:  45, b:  45, a: 1},\n    ['Celestine'  ]  : {r: 113, g: 168, b: 214, a: 1},\n    ['B.E.A.S.T.'] : {r: 111, g: 111, b: 111, a: 1},\n    ['Scoundrel' ] : {r: 111, g: 111, b: 111, a: 1},\n    ['Nanoseer'  ] : {r: 111, g: 111, b: 111, a: 1},\n    ['Engineer'  ] : {r: 111, g: 111, b: 111, a: 1},\n    ['Fury'      ] : {r: 111, g: 111, b: 111, a: 1},\n  }\n  \n  var loadCoptions = function() {\n    var saved = gvar( modNameC )\n    if (saved) {\n      coptions = saved\n      report('Loading <span class=\"ndb gold\">ndb</span>\\'s color options, complete.')\n    } }\n  var saveCoptions = function() {\n    report('Saving <span class=\"ndb gold\">ndb</span>\\'s color options.')\n    svar( modNameC, coptions )\n    report('Complete.') }\n  var gcop = function() {\n    return coptions }\n  \n  var inject = function(rule, addedClass) {\n     var c = classr\n     if (typeof addedClass == 'string') { c += ' ' + addedClass }\n     $('body').append('<div class=\"' + c + '\">&shy;<style>' + rule + '</style></div>') }\n  \n  var init = function() {\n    $('.' + classr).remove()   \n    inject('.ndb         { font-family: \"LiberationMono\"; font-size: 9pt; }')\n    inject('.ndb.mini    { font-size: 7pt; }')\n    inject('.ndb.gold    { color: rgba( 255, 195,  17, 1); }')\n    inject('.ndb.green   { color: rgba(  45, 216,  26, 1); }')\n    inject('.ndb.red     { color: rgba( 222,  15,  15, 1); }')\n    inject('.ndb.grey    { color: rgba( 155, 155, 155, 1); }')\n    inject('.ndb.dimgrey { color: rgba(  79,  79,  79, 1); }')\n    inject('.ndb.border  { color: rgba(  63,   5, 188, 1); }')\n    for (var k in coptions) {\n      var c = coptions[k]\n      var r = k\n      if (r == 'B.E.A.S.T.') { r = 'BEAST' }\n      inject('.ndb.' + r + ' { color: rgba( ' + c.r + ',' + c.g + ',' + c.b + ',' + c.a + '); }')\n    }\n    \n    var rules  = ''\n        rules += '#ndb-colormap {position:absolute; left:50%; top:50%; height:400px; width:600px; transform:translate(-50%,-50%); z-index: 999;} '\n        rules += '#ndb-colormap {background:rgba(1,1,1,0.88); border:1px solid rgba(88,88,88,0.67); border-radius:3px;} '\n        rules += '#ndb-cm-closer {position:absolute; right:0%; top:0%; height:18px; width:18px;} '\n        rules += '#ndb-cm-closer {background:rgba(120,25,50,0.25); color:rgba(200,2,55,1); border-top-right-radius:3px; cursor:pointer;} '\n        rules += '#ndb-cm-closer:hover {color:rgba(232,2,55,1);} '\n        rules += '#ndb-cm-closer {font-family:Futura,sans serif; font-size:9pt; text-align:center; line-height:15px;} '\n        rules += '#ndb-cm-reader {position:absolute; left:0%; top:18px; height:calc(100% - 18px - 18px); width:calc(49% - 14px - 7px); } '\n        rules += '#ndb-cm-reader {margin-left:14px; padding-right:7px; margin-top:21px;} '\n        rules += '#ndb-cm-reader {border-right:1px solid rgba(88,88,88,0.45);} '\n        rules += '#ndb-cm-reader {font-family:\"LiberationMono\",sans serif; font-size:8pt;} '\n        rules += '#ndb-cm-palette {position:absolute; left:50%; top:18px; height:calc(100% - 18px - 18px); width:50%; } '\n      \n        rules += '#ndb-cm-targetC {position:absolute; left:50%; top:23px; height:44px; width:calc(88% - 4px - 3px - 3px - 14px); transform:translate(calc(-50% - 6px),0%);} '\n        rules += '#ndb-cm-targetC {background:rgba(200,200,200,0.11); border:3px solid rgba(1,1,1,0);} '\n        rules += '#ndb-cm-target {font-size:11pt; text-align:center; line-height:44px;} ' \n        rules += '#ndb-cm-targetLeft {position:absolute; left:-3px; top:-3px; height:100%; width:16px;} '\n        rules += '#ndb-cm-targetLeft {border-top:3px solid rgba(255,255,255,0.23); border-left:3px solid rgba(255,255,255,0.23); border-bottom:3px solid rgba(255,255,255,0.23);} '\n        rules += '#ndb-cm-targetRight {position:absolute; right:-3px; top:-3px; height:100%; width:16px;} '\n        rules += '#ndb-cm-targetRight {border-top:3px solid rgba(255,255,255,0.23); border-right:3px solid rgba(255,255,255,0.23); border-bottom:3px solid rgba(255,255,255,0.23);} '\n        rules += '.sliderC {position:relative; left:40px; top:92px; margin-top:8px; margin-bottom:8px; width: 160px;} '\n        rules += '.sliderI {width: 160px;} '\n        rules += '.sliderF {position:absolute; right:-44px; top:50%; height:100%; width:42px; transform:translate(0%, -50%);} '\n        rules += '.sliderF {font-family:\"LiberationMono\"; font-size:10pt; text-align:center; line-height:22px; white-space:pre-wrap;} '\n        rules += '.sliderF {background:rgba(255,1,1,0);} '\n        rules += '.ndb.elem.Song, .ndb.elem.Scatterhome, .ndb.elem.Celestine, .ndb.elem.target { cursor: pointer; } '\n        rules += '#ndb-cm-RsliderF {color:rgba(255,1,1,1);} '\n        rules += '#ndb-cm-GsliderF {color:rgba(1,255,1,1);} '\n        rules += '#ndb-cm-BsliderF {color:rgba(1,1,255,1);} '\n      \n    inject(rules)\n  }\n  \n  var report = function(msg) {\n    var s  = ''\n        s += '<span class=\"ndb\" style=\"color: red;\">(ndb): '\n        s += msg\n        s += '</span>'\n    wrt(s) }\n  \n  // Take a leaf out of Zahan's book & save Object to Nexus\n  var save = function() {\n    report('Saving <span class=\"ndb gold\">ndb</span>.')\n    svar( modName, db )\n    report('Complete.')\n  }\n  var load = function() {\n    var saved = gvar( modName )\n    if (saved) {\n      db = saved\n      var c = 0\n      for (var k in db) {\n        db[k].regex = new RegExp('\\\\b' + db[k].name + '\\\\b', 'g')\n        if (typeof db[k].keyed == 'undefined') { db[k].keyed = new Date().getTime() }\n        c += 1\n      }\n      report('Loading <i>ndb</i> complete. ' + c + ' records intact.')\n    }\n  }\n    \n  var gdb = function() {\n    return db }\n    \n  var remake = function() {\n    var temp = []\n    for (var k in db) {\n      temp.push(db[k].name) }\n    destroy()\n    for (var i = 0; i < temp.length; i++) {\n      add(temp[i]) \n    } }\n    \n  var destroy = function() {\n       db = {}\n        save()\n    hardsave()\n    report('Destroyed existing & recreated empty <i>ndb</i>.') }\n  \n  var player = function(name) {\n    if (typeof db[name] == 'undefined') { return false }\n    return true }\n \n  var add = function(name, faction, prof, race, suppress) {\n    if (!name) { return }\n    var suppress = suppress || doSuppress\n    if (player(name)) {\n      // exists\n      if (typeof faction != 'undefined') { db[name].faction = faction }\n      if (typeof prof != 'undefined')    { db[name].prof    = prof    }\n      if (typeof race != 'undefined')    { db[name].race    = race    }\n      if (!suppress) { report('Successfully added <span class=\"ndb grey\">' + name + '</span> to <span class=\"ndb gold\">ndb</span>.') }\n    } else {\n      db[name] = {}\n      db[name].name    = name\n      db[name].faction = faction || '-'\n      db[name].prof    = prof    || '-'\n      db[name].race    = race    || '-'\n      db[name].regex   = new RegExp('\\\\b' + name + '\\\\b', 'g')\n      db[name].keyed   = new Date().getTime()\n      if (!suppress) { report('Successfully added <span class=\"ndb grey\">' + name + '</span> to <span class=\"ndb gold\">ndb</span>.') }\n    } }\n \n  var remove = function(name, suppress) {\n    if (!name) { return }\n    delete db[name]\n      if (!suppress) { report('Successfully removed <span class=\"ndb grey\">' + name + '</span> from <span class=\"ndb gold\">ndb</span>.') }\n    console.log('(ndb): Removed ' + name + ' from ndb.') }\n  \n  var citizen = function(name, faction) {\n    if (!player(name)) { add(name, faction) } else {\n      db[name].faction = faction\n    }\n    return db[name] }\n \n  var getFaction = function(name) {\n    if (!player(name)) { return '-' } else {\n    return db[name].faction } }\n  \n  var prof = function(name, prof) {\n    if (!player(name)) { add(name, '-', prof) } else {\n      db[name].prof = prof\n    }\n    return db[name] }\n  \n  var getProf = function(name) {\n    if (!player(name)) { return '-' } else {\n    return db[name].prof } }\n  \n  var race = function(name, race) {\n    if (!player(name)) { add(name, '-', '-', race) } else {\n      db[name].race = race\n    }\n    return db[name] }\n  \n  var getRace = function(name) {\n    if (!player(name)) { return '-' } else {\n    return db[name].race } }\n  \n  var gender = function(name, gender) {\n    if (!player(name)) { add(name) }\n    db[name].gender = gender\n    return db[name] }\n  \n  var getGender = function(name) {\n    if (!player(name)) { return '-' } else {\n    return db[name].gender } }\n  \n  var colorise = function(name, r, g, b) {\n     name = title(name)\n     if (!player(name)) { report('No such player to generate unique highlight.'); return } else {\n     db[name].color = {r: parseInt(r), g: parseInt(g), b: parseInt(b), a: 1}\n     report('Set <span style=\"color:rgba('+r+','+g+','+b+',1);\">' + name + '</span>\\'s color to rgba(' + r + ',' + g + ',' + b + ', 1).')\n     return db[name] } }\n\n  var getColor = function(name) {\n    if (!player(name)) { return }\n    if (typeof db[name].color == 'undefined') { return false }\n    return db[name].color }\n  \n  var gmcp = function(e, r, n) {\n    if (r == 'Room.Players') {\n      for (var i=0; i<n.length; i++) {\n       if (!player(n[i].name)) { add(n[i].name) }\n      }\n    } else if (r == 'Room.AddPlayer') {\n      if (!player(n.name)) { add(n.name) }  \n    } else if (r == 'Room.RemovePlayer') {\n      if (!player(n)) { add(n) }\n    } }\n  \n  var update = function() {\n    var url = 'https://www.starmourn.com/api/characters/ALPHA.json'\n    if (useCORS) { url = urlCORS + url }\n    for (var name in db) {\n      $.getJSON( url.replace('ALPHA', name), function(data) {\n        if (typeof data == 'string') { report(data) } else {\n        var name    = data.name\n        var faction = data.faction\n        var prof    = data.class\n        var race    = data.race\n        add(name, faction, prof, race, true, doSuppress) }\n      })\n    } }\n  \n  // Trigger/Regex Code\n  var sub = function(msg) {\n    if (!doHighlight) { return }\n    var rcl = replace_current_line\n    \n    if (typeof client.current_line.parsed_line == 'undefined') { return }\n    var line = current_text()\n    \n    for (var k in db) {\n      var RE  = db[k].regex\n      var f   = db[k].faction\n      var c   = 'rgba( 99, 99, 99, 1 )'\n      if (typeof db[k].color != 'undefined') { c = 'rgba( ' + db[k].color.r + ',' + db[k].color.g + ',' + db[k].color.b + ',' + db[k].color.a + ')' } else\n      if (typeof coptions[f] != 'undefined') { c = 'rgba( ' + coptions[f].r + ',' + coptions[f].g + ',' + coptions[f].b + ',' + coptions[f].a + ')' }\n      while((match = RE.exec(line)) != null) {\n        var cp = match[0]\n        rcl(match.index, cp.length, cp, c)\n      }\n    }\n  }\n\n  // Setup for Honors Interface\n  var hstate = 0\n  var honorsState   = function() {\n    if (hstate == 1) { hstate = 2 }\n    else if (hstate == 2) { hstate = 0 }\n  }\n  var honorsName    = function(v) { \n      hstate = 1\n      temporaryFaction = ''\n      temporaryRace    = ''\n      temporaryGender  = ''\n      temporaryName    = v }\n  var honorsFaction = function(v) { temporaryFaction = v }\n  var honorsRace    = function(v) { temporaryRace    = v }\n  var honorsGender  = function(v) { temporaryGender  = v }\n  var honorsParse = function() {\n    if (hstate < 2) { return }\n    if (player(temporaryName)) {\n      citizen(temporaryName, temporaryFaction)\n      race(temporaryName, temporaryRace)\n      gender(temporaryName, temporaryGender)\n    } else {\n      add(temporaryName, temporaryFaction, undefined, temporaryRace)\n      gender(temporaryName, temporaryGender)\n    }\n    temporaryName    = ''\n    temporaryFaction = ''\n    temporaryRace    = ''\n    temporaryGender  = ''\n    hstate = 0\n  }\n  \n  var qwStateQ = function(val) {\n    if (typeof val != 'undefined') { \n      qwState = val \n      if (val == 0) { qw = [] }\n      if (val == 2) { qwRequest() }\n    }\n    return qwState }\n  \n  var qwCapture = function(arg) {\n    if (arg) { qw.push(arg) }\n    return qw }\n  \n  var qwRequest = function() {\n    var c = qw[0]\n    c = c.trim()\n    var t = c.split(',')\n    var L = t[(t.length - 1)]\n    t[(t.length - 1)] = L.trim().replace('and ','')\n    \n    var url = 'https://www.starmourn.com/api/characters/ALPHA.json'\n    if (useCORS) { url = urlCORS + url }\n    for (var i = 0; i < t.length; i++) {\n      var name = t[i]\n      $.getJSON( url.replace('ALPHA', name), function(data) {\n        if (typeof data == 'string') { report(data) } else {\n        var name    = data.name\n        var faction = data.faction\n        var prof    = data.class\n        var race    = data.race\n        add(name, faction, prof, race, true, doSuppress) }\n      })      \n    }\n  }\n  \n  /*\n    User Interfaces, main switchboard @ presents()\n   */\n  \n  var showMain = function() {\n    var str  = '<br>'\n        str += '<span class=\"ndb border\">================================================================================</span><br />'\n        str += '<br />'\n        str += '<span class=\"ndb\">  Welcome to <span class=\"ndb gold\">ndb</span>. Commands are below:</span><br />'\n        str += '<br />'\n        str += '<span class=\"ndb border\">================================================================================</span><br />'\n        str += ' <span class=\"ndb dimgrey\">n</span>db<span class=\"ndb dimgrey\">.</span><br />'\n        str += '      u<span class=\"ndb dimgrey\">pdate</span>          Requests API data from Starmourn.<br />'\n        str += '<span class=\"ndb border\">============================== INFORMATION        ==============================</span><br />'\n        str += '      a<span class=\"ndb dimgrey\">ll</span>             Shows a list of players.<br />'\n        str += '      f<span class=\"ndb dimgrey\">actions</span>        Shows players by factions.<br />'\n        str += '      c<span class=\"ndb dimgrey\">lasses</span>         Shows players by class.<br />'\n        str += '      r<span class=\"ndb dimgrey\">aces</span>           Shows players by race.<br />'\n        str += '      s<span class=\"ndb dimgrey\">tats</span>           Shows player composition by varying filters.<br />'\n        str += '<span class=\"ndb border\">============================== USER INTERACTION   ==============================</span><br />'\n        str += '      hl              Turns <span class=\"ndb green\">ON</span> Highlighting.<br />'\n        str += '      uhl             Turns <span class=\"ndb red\"  >OFF</span> Highlighting.<br />'\n        str += '      <span class=\"ndb dimgrey\">&lt;</span>name<span class=\"ndb dimgrey\">&gt;</span> r g b    Specify a color for a player.<br />'\n        str += '      colors          Opens window to set colors.<br />'\n        str += '      set<span class=\"ndb dimgrey\">tings</span>        Shows settings.<br />'\n        str += '<span class=\"ndb border\">============================== DATABASE FUNCTIONS ==============================</span><br />'\n        str += '      try             Recreates all players in the database.<br />'\n        str += '      reset           Deletes all existing players in the database. <span class=\"ndb red\">Irreversible</span>.<br />'\n        str += '      shh             Reduces notifications from <span class=\"ndb gold\">ndb</span>.<br />'\n        str += '      yup             Allows increased notifications from <span class=\"ndb gold\">ndb</span>.<br />'\n        str += '      save            Attempts <span class=\"red\">hard save</span> to <span class=\"ndb gold\">ndb</span> to Starmourn server.<br />'\n        str += '<br />'\n        str += '<span class=\"ndb border\">================================================================================</span><br />'\n        str += '<span class=\"ndb mini\">        * If you get stuck, use the Developer Console to manipulate your data as required.</span><br />'\n        str += '<br />'\n    wrt(str)\n  }\n  \n  var cleandb = function() {\n    // No access to API to do robust testing so not going to code it for now  \n  }\n  var redoDB = function() {\n    report('Attempting remake of <i>ndb</i>...')\n    remake()\n    var c = 0\n    for (var k in db) { c += 1 }\n    report('Recreated <i>ndb</i> with <span class\"ndb white\">' + c + '</span> records.')\n  }\n  var resetDB  = destroy\n  var updateDB = update\n  var quietDB  = function() { doSuppress = true; report('Will reduce <i>ndb</i> reporting.') }\n  var alertDB  = function() { doSuppress = false; report('<i>ndb</i> will be verbose in reporting.') }\n  \n  var showSettings = function() {  }\n  \n  var showAll = function() {\n    var str = ''\n    var tdb = []\n    var c = 0\n    for (var k in db) { c += 1; tdb.push(db[k]) }\n    tdb.sort(chainSortBy([ \n        sort_by('faction', true, null), \n        sort_by('prof', true, null),\n        sort_by('name', true, null),\n    ]) )\n    c = lpad(c, 4)\n    str += '<span class=\"ndb border\">== Displaying <span class=\"ndb gold\">' + c + '</span> players =====================================================</span><br />'\n    var fn = {}\n    var loop = 0\n    for (var k in tdb) {\n      var p = tdb[k]\n      if (typeof fn[p.faction] == 'undefined') { fn[p.faction] = {} }\n      if (typeof fn[p.faction][p.prof] == 'undefined') { fn[p.faction][p.prof] = 0 }\n      fn[p.faction][p.prof] += 1\n      var r = p.prof\n      if (r == 'B.E.A.S.T.') { r = 'BEAST' }\n      if (loop >= 3) { str += '<br>'; loop = 0 }\n      str += '<span class=\"ndb player ' + p.faction + '\">' + rpad(p.name, 15) + ' <span class=\"ndb ' + r + '\">' + lpad(p.prof,10) + '</span> '\n      loop += 1\n    }\n    str += '<br>'\n    str += '<span class=\"ndb border\">================================================================================</span><br />'\n    \n      \n    str += '<span class=\"ndb border\">================================================================================</span><br />'\n    wrt(str)\n  }\n  var showFactions = function() {\n  \n  }\n  var showClasses = function() {\n  \n  }\n  var showRaces = function() {\n  \n  }\n  var showPerson = function() {\n  \n  }\n  var showStats = function() {\n     /* Do your calculations first */\n     var mn = 0\n     var fn = {'Celestine':0, 'Song':0, 'Scatterhome':0, 'Unaffiliated':0}\n     var cn = {'B.E.A.S.T.':0, 'Scoundrel':0, 'Engineer':0, 'Nanoseer':0, 'Fury':0}\n     var rn = {'Amaians':0, 'Decheerans':0, 'Elgan':0, 'Jin':0, 'Krona':0, 'Human':0, 'Nath-el':0, 'Nusriza':0, 'Ry\\'nari':0, 'Shen':0, 'Tukkav':0, 'W\\'hoorn':0}\n     for (var k in db) {\n       mn += 1\n       var p = db[k]\n       if (typeof fn[p.faction] != 'undefined') { fn[p.faction] += 1 }\n       if (typeof cn[p.prof] != 'undefined') { cn[p.prof] += 1 }\n     }\n     var str  = ''\n         str += '<br />'\n         str += '<span class=\"ndb border\">================================================================================</span><br />'\n         str += '<br/>'\n         str += '<span class=\"ndb gold\">  ndb</span> is currently tracking <br>'\n         str += '<br/>'\n         str += '<span class=\"ndb prewrap\">    Players, total  ' + lpad(mn, 16) + '</span><br>'\n         str += '<span class=\"ndb prewrap\">    Players, by faction </span><br>'\n         str += '<span class=\"ndb prewrap\">       Celestine Ascendancy  : ' + lpad(fn['Celestine'], 5) + '</span><br>'\n         str += '<span class=\"ndb prewrap\">       Song Dominion         : ' + lpad(fn['Song'], 5) + '</span><br>'\n         str += '<span class=\"ndb prewrap\">       Scatterhome           : ' + lpad(fn['Scatterhome'], 5) + '</span><br>'\n         str += '<span class=\"ndb prewrap\">       Unaffiliated          : ' + lpad(fn['Unaffiliated'], 5) + '</span><br>'\n         str += '<br/>'\n         str += '<span class=\"ndb prewrap\">    Players, by class: </span><br>'\n         str += '<span class=\"ndb prewrap\">       B.E.A.S.T.            : ' + lpad(cn['B.E.A.S.T.'], 5) + '</span><br>'\n         str += '<span class=\"ndb prewrap\">       Scoundrel             : ' + lpad(cn['Scoundrel'], 5) + '</span><br>'\n         str += '<span class=\"ndb prewrap\">       Engineer              : ' + lpad(cn['Engineer'], 5) + '</span><br>'\n         str += '<span class=\"ndb prewrap\">       Nanoseer              : ' + lpad(cn['Nanoseer'], 5) + '</span><br>'\n         str += '<span class=\"ndb prewrap\">       Fury                  : ' + lpad(cn['Fury'], 5) + '</span><br>'\n         str += '<br/>'\n         str += '<span class=\"ndb prewrap\">    Players, by race: </span><br>'\n         str += '<span class=\"ndb prewrap\">       Amaians               : ' + lpad(rn['Amaians'], 5) + '</span><br>'\n         str += '<span class=\"ndb prewrap\">       Decheerans            : ' + lpad(rn['Decheerans'], 5) + '</span><br>'\n         str += '<span class=\"ndb prewrap\">       Elgan                 : ' + lpad(rn['Elgan'], 5) + '</span><br>'\n         str += '<span class=\"ndb prewrap\">       Jin                   : ' + lpad(rn['Jin'], 5) + '</span><br>'\n         str += '<span class=\"ndb prewrap\">       Krona                 : ' + lpad(rn['Krona'], 5) + '</span><br>'\n         str += '<span class=\"ndb prewrap\">       Human                 : ' + lpad(rn['Human'], 5) + '</span><br>'\n         str += '<span class=\"ndb prewrap\">       Nath-el               : ' + lpad(rn['Nath-el'], 5) + '</span><br>'\n         str += '<span class=\"ndb prewrap\">       Nusriza               : ' + lpad(rn['Nusriza'], 5) + '</span><br>'\n         str += '<span class=\"ndb prewrap\">       Ry\\'nari               : ' + lpad(rn['Ry\\'nari'], 5) + '</span><br>'\n         str += '<span class=\"ndb prewrap\">       Shen                  : ' + lpad(rn['Shen'], 5) + '</span><br>'\n         str += '<span class=\"ndb prewrap\">       Tukkav                : ' + lpad(rn['Tukkav'], 5) + '</span><br>'\n         str += '<span class=\"ndb prewrap\">       W\\'hoorn               : ' + lpad(rn['W\\'hoorn'], 5) + '</span><br>'\n         str += '<br/>'\n         str += '<span class=\"ndb border\">======================================================================== <span class=\"ndb gold\">NDB</span> ===</span><br />' \n         str += '<br />'\n     wrt(str)\n  }\n  \n  var useHighlight = function() { doHighlight = true; report('<i>ndb</i> will highlight players.') }\n  var noHighlight  = function() { doHighlight = false; report('<i>ndb</i> will <span class=\"ndb white\">not</span> highlight players.') }\n  \n  var setColours = function() {\n    // Pseudo-code\n    //   If it doesn't exist, make the window\n    //   Reload the window's values\n      \n    cmCoptions = clone(coptions)\n      \n    if ($('#ndb-colormap').length) { $('#ndb-colormap').remove() }\n    $('body').append('<div id=\"ndb-colormap\"></div>')\n    $('#ndb-colormap').append('<div id=\"ndb-cm-closer\" onclick=\"ndb.cmClose()\">x</div>')\n    $('#ndb-colormap').append('<div id=\"ndb-cm-reader\"><div id=\"ndb-cm-readerContent\"></div></div>')\n    $('#ndb-colormap').append('<div id=\"ndb-cm-palette\"></div>')\n  \n    $('#ndb-cm-palette').append('<div id=\"ndb-cm-targetC\"><div id=\"ndb-cm-targetLeft\"></div><div id=\"ndb-cm-target\"></div><div id=\"ndb-cm-targetRight\"></div></div>')  \n      \n    var slider  = '<div id=\"ndb-cm-XsliderC\" class=\"sliderC\">'\n        slider += '<input id=\"ndb-cm-XsliderI\" class=\"sliderI\" type=\"range\" min=\"0\" max=\"255\" value=\"255\" '\n        slider += 'oninput=\"ndb.cmSlide(\\'Xslider\\', this.value)\" onchange=\"ndb.cmSlide(\\'Xslider\\', this.value)\" onmouseup=\"ndb.cmSlideOff(\\'Xslider\\', this.value)\">'\n        slider += '</input><div id=\"ndb-cm-XsliderF\" class=\"sliderF\">' + lpad(0,3) + '</div></div>'\n    $('#ndb-cm-palette').append(slider.replace(/Xslider/g,'Rslider') + slider.replace(/Xslider/g,'Gslider') + slider.replace(/Xslider/g,'Bslider'))\n      \n    var para = `\n     \"Welcome to the <span class=\"ndb Song elem\" onclick=\"ndb.cmAdjust(\\'Song\\')\">Song Dominion</span>,\" <span class=\"ndb Song elem\" onclick=\"ndb.cmAdjust(\\'Song\\')\">Matias</span> greets warmly.<br><br>\n\n     \"The <span class=\"ndb Celestine elem\" onclick=\"ndb.cmAdjust(\\'Celestine\\')\">Celestine Ascendancy</span> extends her regards,\" says <span class=\"ndb Celestine elem\" onclick=\"ndb.cmAdjust(\\'Celestine\\')\">Kimera</span>.<br><br>\n\n     \"Make yourself at home in <span class=\"ndb Scatterhome elem\" onclick=\"ndb.cmAdjust(\\'Scatterhome\\')\">Scatterhome</span>,\" cackles <span class=\"ndb Scatterhome elem\" onclick=\"ndb.cmAdjust(\\'Scatterhome\\')\">Maddox</span>.<br><br>\n\n     Your <span class=\"ndb target elem\" onclick=\"ndb.cmAdjust(\\'target\\')\">target</span> screams in terror.\n    `\n    \n    $('#ndb-cm-readerContent').append(para)\n  }\n  \n  var cmAdjust = function(target) {\n    cmTarget = target\n    $('#ndb-cm-target').empty()\n    $('#ndb-cm-target').append('<span class=\"ndb elem ' + cmTarget + '\">' + cmTarget + '</span>')\n    // Adjust sliders\n    if (typeof cmCoptions[cmTarget] != 'undefined') {\n      $('#ndb-cm-RsliderF').empty().append(cmCoptions[cmTarget].r)\n      $('#ndb-cm-GsliderF').empty().append(cmCoptions[cmTarget].g)\n      $('#ndb-cm-BsliderF').empty().append(cmCoptions[cmTarget].b)\n      $('#ndb-cm-RsliderI').val(cmCoptions[cmTarget].r)\n      $('#ndb-cm-GsliderI').val(cmCoptions[cmTarget].g)\n      $('#ndb-cm-BsliderI').val(cmCoptions[cmTarget].b)\n    }\n  }\n  \n  var cmClose = function() {\n    // Update Underlying Data Structure\n    coptions = clone(cmCoptions)\n    /* Don't really need to do this as we updated already on slider assignment\n    for (var k in coptions) {\n      var c = coptions[k]\n      var r = k\n      if (r == 'B.E.A.S.T.') { r = 'BEAST' }\n      inject('.ndb.' + r + ' { color: rgba( ' + c.r + ',' + c.g + ',' + c.b + ',' + c.a + '); }')\n    } */\n    $('#ndb-colormap').remove()   \n  }\n  \n  var cmSlide = function(rgb, val) {\n    var r = $('#ndb-cm-RsliderI').val()\n    var g = $('#ndb-cm-GsliderI').val()\n    var b = $('#ndb-cm-BsliderI').val()\n    if (rgb == 'Rslider') {\n      r = val\n    } else if (rgb == 'Gslider') {\n      g = val\n    } else if (rgb == 'Bslider') {\n      b = val   \n    }\n    cmLastCSS = '.ndb.' + cmTarget + ' {color:rgba(' + r + ',' + g + ',' + b + ', 1);} '\n    inject(cmLastCSS, 'remove')\n    // update the underlying structure\n    cmCoptions[cmTarget].r = r\n    cmCoptions[cmTarget].g = g\n    cmCoptions[cmTarget].b = b\n    // Update the Text\n    $('#ndb-cm-' + rgb + 'F').empty().append(val)\n  }\n  \n  var cmSlideOff = function() {\n    // Update Underlying Data Structure\n    coptions = clone(cmCoptions)\n    // remove additionally created css rules but keep the last one\n    inject(cmLastCSS)\n    $('.ndb-rule.remove').remove()\n  }\n  \n  var tryPlayer  = function(name) {  }\n\n  var presents = function(matches) {\n    var nvar = matches[1]\n    if (typeof nvar == 'undefined') { nvar = 'undefined' }\n    nvar = nvar.replace('.','')\n    nvar = nvar.trim()\n    switch(nvar) {\n      case 'undefined': showMain();     break;\n      case 'try'      : redoDB();       break;\n      case 'reset'    : resetDB();      break;\n      case 'u'        :\n      case 'up'       :\n      case 'update'   : updateDB();     break;\n      case 'shh'      : quietDB();      break;\n      case 'yup'      : alertDB();      break;\n      case 'set'      :\n      case 'settings' : showSettings(); break;\n      case 'a'        :\n      case 'all'      : showAll();      break;\n      case 'f'        :\n      case 'factions' : showFactions(); break;\n      case 'c'        :\n      case 'classes'  : showClasses();  break;\n      case 'r'        :\n      case 'races'    : showRaces();    break;\n      case 's'        :\n      case 'stats'    : showStats();    break;\n      case 'hl'       : useHighlight(); break;\n      case 'uhl'      : noHighlight();  break;\n      case 'colors'   : setColours();   break;\n      case 'save'     : ndbsave();     break;\n      default:\n        tryPlayer(nvar)\n        break;\n    }\n  }\n  \n  var ndbsave = function() {\n    save()\n    saveCoptions()\n    hardsave()\n  }\n  \n  var random = function() {\n    var classes = ['B.E.A.S.T.', 'Scoundrel', 'Nanoseer', 'Engineer', 'Fury']\n    for (var k in db) {\n      var n = Math.floor(Math.random()*3 + 1)\n      if (n == 1) {\n        var c = classes[Math.floor(Math.random() * classes.length)]\n        // Give them a class\n        prof(db[k].name, c)\n      }\n    }\n  }\n  \n  load()\n  save()\n  loadCoptions()\n  saveCoptions()\n  init()\n  random()\n      \n  /*\n    Utility functions\n   */\n  var lpad = function(str, len, ch) {\n    if (typeof str == 'number') { str = str.toString() }\n    if (ch == null) { ch = ' ' }\n    var r = len - str.length\n    if (r < 0) { r = 0 }\n    return ch.repeat(r) + str }\n\n  var rpad = function(str, len, ch) {\n    if (typeof str == 'number') { str = str.toString() }\n    if (ch == null) { ch = ' ' }\n    var r = len - str.length\n    if (r < 0) { r = 0 }\n    return str + ch.repeat(r) }\n  \n  var clone = function(obj) {\n    var copy;\n    if (null == obj || 'object' != typeof obj) return obj;\n    if (obj instanceof Date) { copy = new Date(); copy.setTime(obj.getTime()); return copy };\n    if (obj instanceof Array) { copy = []; for (var i=0;i<obj.length;i++) { copy[i] = clone(obj[i]) }; return copy };\n    if (obj instanceof Object) { copy = {}; for (var attr in obj) { if (obj.hasOwnProperty(attr)) { copy[attr] = clone(obj[attr]) } }; return copy };\n    throw new Error('Unable to copy obj! Type not supported.'); }\n  \n  var sort_by = function(field, reverse, primer){\n    var key = primer ? \n         function(x) {return primer(x[field]); }:\n         function(x) {return x[field] };\n    reverse = [-1, 1][+!!reverse];\n    return function (a, b) {\n        a = key(a);\n        b = key(b);\n        return a==b ? 0 : reverse * ((a > b) - (b > a));  //^ Return a zero if the two fields are equal!\n    } }\n\n  var chainSortBy = function(sortByArr) {\n    return function(a, b) {\n        for (var i=0; i<sortByArr.length; i++) {\n            var res = sortByArr[i](a,b);\n            if (res != 0)\n                return res; //If the individual sort_by returns a non-zero,\n                            //we found inequality, return the value from the comparator.\n        }\n        return 0;\n    } }\n    \n  return {\n   // Interaction with structure\n   save       : save,\n   load       : load,\n   hsave      : hardsave,\n   \n   // Transactions\n   db         : gdb,       // unsure if should remain exposed\n   remake     : remake,\n   destroy    : destroy,\n   // Unit transactions\n   add        : add,\n   remove     : remove,\n   player     : player,\n   setFaction : citizen,\n   setProf    : prof,\n   setRace    : race,\n   setColor   : colorise,\n   faction    : getFaction,\n   prof       : getProf,\n   race       : getRace,\n   \n   // Client-Server interfaces\n   sub        : sub,      // !important\n   gmcp       : gmcp,\n   update     : update,   // API\n   // Honors\n   honorsName   : honorsName,   \n   honorsRace   : honorsRace,\n   honorsFaction: honorsFaction,\n   honorsGender : honorsGender,\n   honorsParse  : honorsParse,\n   honorsState  : honorsState,\n   qwState      : qwStateQ,\n   qw           : qwCapture,\n      \n   // Utility\n   report     : report,\n   title      : title,\n   coptions   : gcop,\n      \n   // User Interface\n   presents   : presents, \n   cmClose    : cmClose,\n   cmAdjust   : cmAdjust,\n   cmSlide    : cmSlide,\n   cmSlideOff : cmSlideOff,\n  }\n})()\n\nndb.report('<span class=\"ndb\" style=\"color: red;\">.<span style=\"color: white;\"><i>ndb</i></span> construction complete.')"},{"type":"function","name":"onGMCP","enabled":true,"id":3,"code":"var matches = arguments[0]\nvar r       = matches.gmcp_method\nvar n       = matches.gmcp_args\n\nif (typeof ndb != 'undefined') {\n  ndb.gmcp(null, r, n)\n}"},{"type":"alias","name":"db.xxx","enabled":true,"id":4,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"var matches = arguments[0]\n\nndb.presents(matches)"}],"text":"^db((?:\\.)\\w+)*$"},{"type":"alias","name":"db.Name R G B","enabled":true,"id":12,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"var matches = arguments[0]\nvar name    = matches[1]\nvar r       = matches[2]\nvar g       = matches[3]\nvar b       = matches[4]\n\nif (typeof ndb != 'undefined') {\n  ndb.setColor(name,r,g,b)\n}"}],"text":"^db\\.(\\w+)[ ]+(\\d+)[ ]+(\\d+)[ ]+(\\d+)$"},{"type":"alias","name":"-h, honors","enabled":true,"id":7,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"var matches = arguments[0]\n\nvar name = matches[1]\n    name = ndb.title(name)\n\nsend_direct('setalias NDB++ honors ' + name, 1)\nsend_direct('NDB++')"}],"text":"^\\-h (\\w+)$"},{"type":"trigger","name":"setalias","enabled":true,"id":5,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^NDB\\+\\+ will now execute\\: honors (\\w+)\\.$","actions":[{"action":"script","script":"var matches = arguments[0]\n\nif (typeof ndb != 'undefined') {\n  ndb.honorsName(matches[1])\n}\n"}]},{"type":"trigger","name":"honors, race","enabled":true,"id":8,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^Race\\:[ ]+(.*?)[ ]+Experience.*$","actions":[{"action":"script","script":"var matches = arguments[0]\nvar race    = matches[1]\n\nif (typeof ndb != 'undefined') {\n  ndb.honorsRace(race)\n  ndb.honorsState()\n}\n"}]},{"type":"trigger","name":"honors, faction","enabled":true,"id":9,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^Faction\\:[ ]+(.*?) \\(.*?\\)[ ]+Captaincy","actions":[{"action":"script","script":"var matches = arguments[0]\nvar faction = matches[1]\n\nif (faction == 'The Song Dominion') { faction = 'Song' }\nif (faction == 'The Celestine Ascendancy') { faction = 'Celestine' }\n\nif (typeof ndb != 'undefined') {\n  ndb.honorsFaction(faction)\n}"}]},{"type":"trigger","name":"prompt","enabled":true,"id":10,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^Health\\: \\d+\\/\\d+","actions":[{"action":"script","script":"if (typeof ndb != 'undefined') {\n  ndb.honorsParse() \n}"}]},{"type":"trigger","name":"match-all","enabled":true,"id":11,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^(.*)$","actions":[{"action":"script","script":"if (typeof ndb != 'undefined') {\n  ndb.sub(args[1])  \n    \n  var qw = ndb.qwState()\n  console.log(qw)\n  if (qw == 1) {\n    ndb.qw(args[1])\n  } else if (qw > 1) {\n    ndb.qwState(0)\n  }\n}"}]},{"type":"trigger","name":"QW start","enabled":true,"id":13,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^-- Users connected to the commsphere ------------------------------------------$","actions":[{"action":"script","script":"if (typeof ndb != 'undefined') {\n  ndb.qwState(1)   \n}"}]},{"type":"trigger","name":"QW end","enabled":true,"id":14,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^---------------------------------------------------------------[-]+ Total: (\\d+) [-]+$","actions":[{"action":"script","script":"if (typeof ndb != 'undefined') {\n  ndb.qwState(2)   \n}"}]}]}